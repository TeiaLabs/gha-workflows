name: Reusable SonarCloud Workflow
on:
  workflow_call:
    inputs:
      exec-report:
        description: Where to retrieve pytest execution results.
        required: false
        default: pytest-exec-results/xunit-result.xml
        type: string
      cov-report:
        description: Where to retrieve pytest coverage results.
        required: false
        default: pytest-cov-results/coverage.xml
        type: string
      bandit-report:
        description: Where to retrieve bandit results.
        required: false
        default: bandit-results/bandit.json
        type: string
      pylint-report:
        description: Where to retrieve pylint results.
        required: false
        default: pylint-result/pylint.json
        type: string
      flake-report:
        description: Where to retrieve flake results.
        required: false
        default: flake8-result/flake8.txt
        type: string

jobs:
  SonarCloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Reports
        id: download
        uses: actions/download-artifact@v3
        with:
          path: reports

      - name: Scan with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=${{steps.download.outputs.download-path}}/${{ inputs.cov-report }}
            -Dsonar.python.xunit.reportPath=${{steps.download.outputs.download-path}}/${{ inputs.exec-report }}
            -Dsonar.python.bandit.reportPaths=${{steps.download.outputs.download-path}}/${{ inputs.bandit-report }}
            -Dsonar.python.pylint.reportPaths=${{steps.download.outputs.download-path}}/${{ inputs.pylint-report }}
            -Dsonar.python.flake8.reportPaths=${{steps.download.outputs.download-path}}/${{ inputs.flake8-report }}
